class Task{constructor(t){this.content=t,this.isCompleted=!1}}class ToDoList{constructor(){this.tasks=JSON.parse(localStorage.getItem("tasks"))||[],this.completed=[],this.tasksContainer=document.getElementById("todo-items"),this.init()}addTask(t){if(""!==t){const e=new Task(t);return this.tasks.push(e),this.addToLocalStorage(),void this.renderTasks(this.tasks)}alert("Type something!")}renderTasks(t){this.tasksContainer.innerHTML="",t.forEach(t=>{const e=document.createElement("li");e.classList.add("todo-item"),e.innerHTML=t.content,e.append(this.renderRemoveButton()),this.tasksContainer.append(e)})}renderRemoveButton(){const t=document.createElement("button");return t.setAttribute("class","todo-remove-button"),t.innerHTML="Delete",t}addToLocalStorage(){localStorage.setItem("tasks",JSON.stringify(this.tasks))}bind(){const t=document.getElementById("todo-button-add"),e=document.getElementById("todo-input");t.addEventListener("click",()=>{this.addTask(e.value),e.value=""})}init(){this.renderTasks(this.tasks),this.bind()}}const toDoList=new ToDoList;